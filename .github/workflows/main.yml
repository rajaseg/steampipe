name: Build-Scan-Push

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BuildNumber: ${{ github.run_id }}-${{ github.run_number }}
  ImageName: 'tuneitme/steampipe'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Steampipe-Docker:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3
        
    - name: Build Image & Push to GHCR
      uses: macbre/push-to-ghcr@v12
      with:
        #GitHub Credentials
        github_token: ${{ secrets.PERSONAL_TOKEN }}
        image_name: rajaseg/steampipe
        #Dockerfile Path
        path: 'src'
        dockerfile: 'src/Dockerfile'
        #context: # optional, default is .
        # Docker repository to push an image to, defaults to ghcr.io
        repository: ghcr.io
        # A username to use when pushing an image to docker.io (defaults to the github.actor)
        #docker_io_user: # optional
        # Your docker.io token created via https://hub.docker.com/settings/security
        #docker_io_token: # optional
        # Image tag, e.g. latest. Will overwrite the tag latest tag on a push, and have no effect on a release.
        image_tag: latest
        
    - name: Push Docker image
      uses: docker/build-push-action@v1.1.2
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: ${{ secrets.DockerHubUser }}
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DockerHubPassword }}
        # Docker repository to tag the image with
        repository: ${{ env.ImageName }}
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: 'latest'
        # Path to the build context
        path: 'src'
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        dockerfile: 'src/Dockerfile'
        # Whether to push the image
        push: true
